// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiBase.Db;

#nullable disable

namespace WebApiBase.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20220831074706_TestInit")]
    partial class TestInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApiBase.Models.RelationalDataBase.DataViewInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("ID");

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(255)")
                        .HasComment("注释");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(0)")
                        .HasComment("创建时间");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(30)")
                        .HasComment("创建人");

                    b.Property<int?>("DbID")
                        .HasColumnType("int");

                    b.Property<string>("SqlText")
                        .HasColumnType("longtext")
                        .HasComment("sql语句");

                    b.Property<string>("ViewName")
                        .HasColumnType("varchar(255)")
                        .HasComment("视图名称");

                    b.HasKey("ID");

                    b.HasIndex("DbID");

                    b.ToTable("data_view");
                });

            modelBuilder.Entity("WebApiBase.Models.RelationalDataBase.DBConnectionInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("ID");

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(255)")
                        .HasComment("注释");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(0)")
                        .HasComment("创建时间");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(30)")
                        .HasComment("创建人");

                    b.Property<string>("DbIP")
                        .HasColumnType("varchar(20)")
                        .HasComment("数据库IP");

                    b.Property<string>("DbName")
                        .HasColumnType("varchar(50)")
                        .HasComment("数据库名");

                    b.Property<string>("DbPassword")
                        .HasColumnType("varchar(255)")
                        .HasComment("数据库密码");

                    b.Property<string>("DbPort")
                        .HasColumnType("varchar(5)")
                        .HasComment("数据库端口");

                    b.Property<int>("DbType")
                        .HasColumnType("int")
                        .HasComment("0 Mysql;1 SqlServer;2 Oracle");

                    b.Property<string>("DbUser")
                        .HasColumnType("varchar(20)")
                        .HasComment("数据库用户");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasComment("名称");

                    b.HasKey("ID");

                    b.ToTable("db_connection");
                });

            modelBuilder.Entity("WebApiBase.Models.UserInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("ID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(0)")
                        .HasComment("创建时间");

                    b.Property<string>("HeadSculptrue")
                        .HasColumnType("varchar(50)")
                        .HasComment("头像");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(30)")
                        .HasComment("用户名");

                    b.Property<string>("Pwd")
                        .HasColumnType("varchar(30)")
                        .HasComment("密码");

                    b.Property<string>("Remark")
                        .HasColumnType("varchar(200)")
                        .HasComment("备注");

                    b.Property<string>("Role")
                        .HasColumnType("varchar(5)")
                        .HasComment("角色");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(30)")
                        .HasComment("用户账号");

                    b.HasKey("ID");

                    b.ToTable("user_info");
                });

            modelBuilder.Entity("WebApiBase.Models.RelationalDataBase.DataViewInfo", b =>
                {
                    b.HasOne("WebApiBase.Models.RelationalDataBase.DBConnectionInfo", "Db")
                        .WithMany()
                        .HasForeignKey("DbID");

                    b.Navigation("Db");
                });
#pragma warning restore 612, 618
        }
    }
}
